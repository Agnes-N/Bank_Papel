{"version":3,"sources":["signup-valid.js"],"names":["signup_valid","req","res","next","schema","email","Joi","string","minDomainSegments","required","firstName","alphanum","min","max","lastName","password","regex","validate","body","error","details","message","replace","includes","status","json"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEC,gBAAIC,MAAJ,GAAaF,KAAb,CAAmB;AAAEG,MAAAA,iBAAiB,EAAE;AAArB,KAAnB,EAA6CC,QAA7C,EADM;AAEbC,IAAAA,SAAS,EAAEJ,gBAAIC,MAAJ,GAAaI,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC,EAAuCJ,QAAvC,EAFE;AAGbK,IAAAA,QAAQ,EAAER,gBAAIC,MAAJ,GAAaI,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC,EAAuCJ,QAAvC,EAHG;AAIbM,IAAAA,QAAQ,EAAET,gBAAIC,MAAJ,GAAaS,KAAb,CAAmB,qBAAnB,EAA0CP,QAA1C;AAJG,GAAf;;AADuC,sBAOrBH,gBAAIW,QAAJ,CAAahB,GAAG,CAACiB,IAAjB,EAAuBd,MAAvB,CAPqB;AAAA,MAO/Be,KAP+B,iBAO/BA,KAP+B;;AAQvC,MAAIA,KAAJ,EAAW;AACT,QAAIA,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,OAAjB,CAAyBC,OAAzB,CAAiC,GAAjC,EAAsC,EAAtC,EAA0CA,OAA1C,CAAkD,IAAlD,EAAwD,EAAxD,EAA4DC,QAA5D,CAAqE,OAArE,CAAJ,EAAmF;AACjF,aAAOrB,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,GADkB;AAE1BL,QAAAA,KAAK,EAAE;AACLA,UAAAA,KAAK,EAAE;AADF;AAFmB,OAArB,CAAP;AAMD;;AACD,WAAOjB,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BL,MAAAA,KAAK,EAAEA,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,OAAjB,CAAyBC,OAAzB,CAAiC,GAAjC,EAAsC,EAAtC,EAA0CA,OAA1C,CAAkD,IAAlD,EAAwD,EAAxD;AAFmB,KAArB,CAAP;AAID;;AACDnB,EAAAA,IAAI;AACL,CAvBD;;eAwBeH,Y","sourceRoot":"/home/agnes/Documents/Bank_Papel/server/middleware","sourcesContent":["import Joi from 'joi';\n\nconst signup_valid = (req, res, next) => {\n  const schema = {\n    email: Joi.string().email({ minDomainSegments: 2 }).required(),\n    firstName: Joi.string().alphanum().min(3).max(30).required(),\n    lastName: Joi.string().alphanum().min(3).max(30).required(),\n    password: Joi.string().regex(/^[a-zA-Z0-9]{3,30}$/).required(),\n  };\n  const { error } = Joi.validate(req.body, schema);\n  if (error) {\n    if (error.details[0].message.replace('/', '').replace(/\"/g, '').includes('email')) {\n      return res.status(400).json({\n        status: 400,\n        error: {\n          error: 'Incorrect email format. use: example@mail.com',\n        },\n      });\n    }\n    return res.status(400).json({\n      status: 400,\n      error: error.details[0].message.replace('/', '').replace(/\"/g, ''),\n    });\n  }\n  next();\n};\nexport default signup_valid;\n"]}